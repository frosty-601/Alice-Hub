-- Services
local Players = game:GetService("Players")
local InsertService = game:GetService("InsertService")

-- Player and character setup
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Asset IDs
local assets = {
    hayShirt = 9994284902,
    hayPants = 9994290320,
    hayAccessory = {987654321, 17345169629, 12482375447, 12482379270}
}

-- Function to add clothing and accessories
local function addClothingAndAccessoryToCharacter()
    local function loadAndApplyAsset(assetId, assetType)
        local success, asset = pcall(function()
            return InsertService:LoadAsset(assetId)
        end)
        if success and asset then
            local instance = asset:FindFirstChildWhichIsA(assetType)
            if instance then
                instance.Parent = character
            else
                warn("No " .. assetType .. " instance found in the loaded asset")
            end
        else
            warn("Failed to load asset:", asset)
        end
    end

    loadAndApplyAsset(assets.hayShirt, "Shirt")
    loadAndApplyAsset(assets.hayPants, "Pants")

    -- Add accessories
    for _, accessoryId in pairs(assets.hayAccessory) do
        local success, accessory = pcall(function()
            return InsertService:LoadAsset(accessoryId)
        end)
        if success and accessory then
            local accessoryInstance = accessory:FindFirstChildWhichIsA("Accessory")
            if accessoryInstance then
                accessoryInstance.Parent = character
            else
                warn("No accessory instance found in the loaded asset")
            end
        else
            warn("Failed to load accessory asset:", accessory)
        end
    end
end

addClothingAndAccessoryToCharacter()

-- Update Tool names
local function updateToolNames()
    local playerGui = player.PlayerGui
    local hotbar = playerGui:FindFirstChild("Hotbar")
    local backpack = hotbar:FindFirstChild("Backpack")
    local hotbarFrame = backpack:FindFirstChild("Hotbar")

    local tools = {
        [1] = "Compacted punch",
        [2] = "Sky piercier",
        [3] = "Whirlwind Throw",
        [4] = "Barrage"
    }

    for index, toolName in pairs(tools) do
        local baseButton = hotbarFrame:FindFirstChild(tostring(index)).Base
        if baseButton then
            local toolNameLabel = baseButton:FindFirstChild("ToolName")
            if toolNameLabel then
                toolNameLabel.Text = toolName
            end
        end
    end
end

updateToolNames()

-- Function to handle animation changes
local function handleAnimationChanges(animationId, newAnimationId, speed, adjustSpeed)
    if animationId then
        local function onAnimationPlayed(animationTrack)
            if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
                for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
                    animTrack:Stop()
                end

                local AnimAnim = Instance.new("Animation")
                AnimAnim.AnimationId = "rbxassetid://" .. newAnimationId
                local Anim = humanoid:LoadAnimation(AnimAnim)
                Anim:Play()
                Anim:AdjustSpeed(adjustSpeed)
                Anim.TimePosition = 0
                Anim:AdjustSpeed(speed)

                if speed == 0 then
                    delay(1.8, function()
                        Anim:Stop()
                    end)
                end
            end
        end

        humanoid.AnimationPlayed:Connect(onAnimationPlayed)
    end
end

-- Add animation handling
handleAnimationChanges(12273188754, 10468665991, 0.5, 0.1)
handleAnimationChanges(12296113986, 17466449380, 4, 1)
handleAnimationChanges(12309835105, 13376869471, 0.8, 1)
handleAnimationChanges(13603396939, 13633468484, 2, 0)
handleAnimationChanges(11343318134, 12983333733, 0.5, 0)
handleAnimationChanges(15955393872, 15943915877, 1, 0)
handleAnimationChanges(12983333733, 13073745835, 0.2, 0)
handleAnimationChanges(12447707844, 18435303746, 1, 0)
handleAnimationChanges(10479335397, 17838006839, 0.7, 0)
handleAnimationChanges(10503381238, 14900168720, 0.7, 0)
handleAnimationChanges(10470104242, 12447247483, 6, 0)
handleAnimationChanges(12342141464, 13071982935, 1, 0)
handleAnimationChanges(18464351556, 14374357351, 1, 0)
handleAnimationChanges(12272894215, 14046756619, 1, 1)
handleAnimationChanges(16310343179, 15997042291, 1.7, 4)

-- Replace specific animations
local animationIdsToStop = {
    [17859015788] = true,
    [10469493270] = true,
    [10469630950] = true,
    [10469639222] = true,
    [10469643643] = true,
}

local replacementAnimations = {
    ["17859015788"] = "rbxassetid://12684185971",
    ["10469643643"] = "rbxassetid://17889290569",
    ["10469639222"] = "rbxassetid://17889471098",
    ["10469630950"] = "rbxassetid://17889461810",
    ["10469493270"] = "rbxassetid://17889458563",
    ["11365563255"] = "rbxassetid://14516273501"
}

local queue = {}
local isAnimating = false

local function playReplacementAnimation(animationId)
    if isAnimating then
        table.insert(queue, animationId)
        return
    end

    isAnimating = true
    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = replacementAnimationId
        local Anim = humanoid:LoadAnimation(AnimAnim)
        Anim:Play()

        Anim.Stopped:Connect(function()
            isAnimating = false
            if #queue > 0 then
                local nextAnimationId = table.remove(queue, 1)
                playReplacementAnimation(nextAnimationId)
            end
        end)
    else
        isAnimating = false
    end
end

local function stopSpecificAnimations()
    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))
        if animationIdsToStop[animationId] then
            track:Stop()
        end
    end
end

local function onAnimationPlayed(animationTrack)
    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))
    if animationIdsToStop[animationId] then
        stopSpecificAnimations()
        animationTrack:Stop()

        local replacementAnimationId = replacementAnimations[tostring(animationId)]
        if replacementAnimationId then
            playReplacementAnimation(animationId)
        end
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- BodyVelocity adjustment
local function onBodyVelocityAdded(bodyVelocity)
    if bodyVelocity:IsA("BodyVelocity") then
        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)
    end
end

character.DescendantAdded:Connect(onBodyVelocityAdded)
for _, descendant in pairs(character:GetDescendants()) do
    onBodyVelocityAdded(descendant)
end

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    character.DescendantAdded:Connect(onBodyVelocityAdded)
    for _, descendant in pairs(character:GetDescendants()) do
        onBodyVelocityAdded(descendant)
    end
end)
